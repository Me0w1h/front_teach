{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nconst ip = \"localhost:8090\";\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nvar BigInteger = require('jsbn').BigInteger;\n\nvar SecureRandom = require('jsbn').SecureRandom;\n\nexport default {\n  name: 'stu',\n\n  data() {\n    return {\n      commitData: [],\n      input1: \"\",\n      input2: \"\",\n      pk: '',\n      pkScore: \"\",\n      n: '',\n      n_square: \"\",\n      m: \"\",\n      bits: 32,\n      g: \"\",\n      r: \"\",\n      dividerData: {\n        examName: \"\",\n        description: '',\n        date: \"\",\n        id: '',\n        score: \"\"\n      },\n      drawer: false,\n      direction: 'rtl',\n      valueDate: new Date(),\n      userImg: require('../../src/assets/images/userImg.jpg'),\n      user: {\n        id: '',\n        username: '',\n        password: '',\n        name: '',\n        className: '',\n        classId: '',\n        school: '',\n        exam: ''\n      },\n      exams: {\n        id: '',\n        examName: '',\n        date: '',\n        status: '',\n        description: ''\n      }\n    };\n  },\n\n  mounted() {\n    this.testlogin();\n  },\n\n  methods: {\n    encrypt() {\n      this.n = new BigInteger(this.pk);\n      this.n_square = this.n.square();\n      this.m = new BigInteger(this.dividerData.score);\n      this.g = new BigInteger('2');\n      this.r = new BigInteger(this.bits, new SecureRandom());\n      this.pkScore = this.g.modPow(this.m, this.n_square).multiply(this.r.modPow(this.n, this.n_square)).mod(this.n_square).toString();\n    },\n\n    reset() {\n      this.input1 = '';\n      this.input2 = '';\n    },\n\n    submitScore() {\n      if (this.input1 === this.input2) {\n        this.dividerData.score = this.input1;\n        this.encrypt();\n        this.commitData[0] = this.user.id;\n        this.commitData[1] = this.dividerData.id;\n        this.commitData[2] = this.pkScore;\n        this.commitData[3] = this.pk;\n        axios.post(\"http://\" + ip + \"/commit\", this.commitData).then(res => {\n          if (res.data.code == 20010) {\n            this.$message.error(res.data.msg);\n\n            if (res.data.msg == \"您已经提交过了\") {}\n          } else if (res.data.code == 20011) {\n            this.$message.success(res.data.msg);\n          }\n        });\n        this.reset();\n      } else {\n        this.$message.error(\"请确保两次填写相同！！！\");\n      }\n    },\n\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(_ => {\n        done();\n      }).catch(_ => {});\n    },\n\n    mima() {\n      window.alert(\"修改密码\");\n    },\n\n    submit(val) {\n      this.drawer = true;\n      this.dividerData.examName = val.examName;\n      this.dividerData.date = val.date;\n      this.dividerData.description = val.description;\n      this.dividerData.id = val.id;\n    },\n\n    sleep(n) {\n      var start = new Date().getTime();\n\n      while (true) {\n        if (new Date().getTime() - start > n) {\n          break;\n        }\n      }\n    },\n\n    //登录请求\n    testlogin() {\n      axios.get(\"http://\" + ip + \"/login\").then(res => {\n        if (res.data.code == 20001) {\n          this.user = res.data.data[0];\n          this.exams = res.data.data[1];\n          this.pk = res.data.data[2];\n        } else if (res.data.code == 20000) {\n          this.$message.error(\"请先登录!!!\");\n          this.sleep(1000);\n          location.href = \"http://101.42.232.181:8088/login\";\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACAA;;AACA;;AACA;;AACA;EACAC,WADA;;EAEAC;IACA;MAEAC,cAFA;MAGAC,UAHA;MAIAC,UAJA;MAKAC,MALA;MAMAC,WANA;MAOAC,KAPA;MAQAC,YARA;MASAC,KATA;MAUAC,QAVA;MAWAC,KAXA;MAYAC,KAZA;MAaAC;QACAC,YADA;QAEAC,eAFA;QAGAC,QAHA;QAIAC,MAJA;QAKAC;MALA,CAbA;MAuBAC,aAvBA;MAwBAC,gBAxBA;MAyBAC,qBAzBA;MA0BAC,uDA1BA;MA2BAC;QACAN,MADA;QAEAO,YAFA;QAGAC,YAHA;QAIAzB,QAJA;QAKA0B,aALA;QAMAC,WANA;QAOAC,UAPA;QAQAC;MARA,CA3BA;MAuCAC;QACAb,MADA;QAEAH,YAFA;QAGAE,QAHA;QAIAe,UAJA;QAKAhB;MALA;IAvCA;EAkDA,CArDA;;EAsDAiB;IACA;EAEA,CAzDA;;EA4DAC;IACAC;MACA;MACA;MACA;MAEA;MACA;MACA;IACA,CATA;;IAUAC;MACA;MACA;IACA,CAbA;;IAcAC;MACA;QACA;QAEA;QAEA;QACA;QACA;QACA;QAIArC;UACA;YAEA;;YACA,gCAEA;UACA,CANA,MAMA;YACA;UAEA;QACA,CAXA;QAYA;MAIA,CA5BA,MA4BA;QACA;MACA;IACA,CA9CA;;IA+CAsC;MACA,uBACAC,IADA,CACAC;QAEAC;MAEA,CALA,EAMAC,KANA,CAMAF,OANA;IAOA,CAvDA;;IAwDAG;MACAC;IACA,CA1DA;;IA2DAC;MAEA;MACA;MACA;MACA;MACA;IACA,CAlEA;;IAoEAC;MACA;;MACA;QACA;UACA;QACA;MACA;IAEA,CA5EA;;IA8EA;IACAC;MACA/C;QAEA;UAEA;UAEA;UACA;QAIA,CATA,MASA;UAEA;UAEA;UAGAgD;QACA;MAEA,CArBA;IAsBA;;EAtGA;AA5DA","names":["axios","name","data","commitData","input1","input2","pk","pkScore","n","n_square","m","bits","g","r","dividerData","examName","description","date","id","score","drawer","direction","valueDate","userImg","user","username","password","className","classId","school","exam","exams","status","mounted","methods","encrypt","reset","submitScore","handleClose","then","_","done","catch","mima","window","submit","sleep","testlogin","location"],"sourceRoot":"views/stu","sources":["stu.vue"],"sourcesContent":["<template>\r\n  <div id='stu-building'>\r\n    <!-- <el-row>\r\n  <el-col :span=\"9\"><div class=\"grid-content bg-purple-dark\"></div></el-col>\r\n  <el-col :span=\"4\"><div class=\"grid-content bg-purple-dark\">我是学生以登录页面</div></el-col>\r\n  <el-col :span=\"10\"><div class=\"grid-content bg-purple-dark\"></div></el-col>\r\n  <el-col :span=\"1\"><div class=\"grid-content bg-purple-dark\"><el-button round size=\"mini\" @click=\"mima\">修改密码</el-button></div></el-col>\r\n</el-row> -->\r\n    <el-row :gutter=\"100\">\r\n      <el-col :span=\"10\">\r\n\r\n        <!-- <el-divider><i class=\"el-icon-alarm-clock\">日历</i></el-divider> -->\r\n        <el-calendar v-model=\"valueDate\" style=\"margin-top: 3%;margin-left: 16%;\">\r\n        </el-calendar>\r\n        <el-divider direction=\"vertical\"></el-divider>\r\n\r\n      </el-col>\r\n\r\n      <el-col :span=\"12\">\r\n        <el-divider><i class=\"el-icon-user-solid\">个人信息</i></el-divider>\r\n        <el-card shadow=\"hover\">\r\n          <div class=\"user\">\r\n            <img style=\"width: 10%;\" />\r\n            <div class=\"userInfo\">\r\n              <p class=\"name\" style=\"font-family:Impact;font-size:20px;\">姓名：{{ this.user.name }}</p>\r\n              <br>\r\n              <p class=\"access\" style=\"font-family:Impact;font-size:20px;\">学号：{{ this.user.username }}</p>\r\n              <br>\r\n              <p class=\"name\" style=\"font-family:Impact;font-size:20px;\">班级：{{ this.user.className }}</p>\r\n              <br>\r\n              <p class=\"name\" style=\"font-family:Impact;font-size:20px;\">学校：{{ this.user.school }}</p>\r\n\r\n            </div>\r\n          </div>\r\n          <el-divider></el-divider>\r\n          <div class=\"login-info\">\r\n            <p style=\"font-family:Impact;font-size:20px;\">上次登录时间：<span>2022-6-15</span></p>\r\n            <br>\r\n            <p style=\"font-family:Impact;font-size:20px;\">上次登录地点：<span>中国-北京</span></p>\r\n          </div>\r\n\r\n        </el-card>\r\n        <el-divider><i class=\"el-icon-edit-outline\"> 已参加考试</i></el-divider>\r\n        <el-card class=\"box-card\">\r\n          <div>\r\n            <el-table :data=\"exams\" style=\"width: 100%\">\r\n              <el-table-column prop=\"examName\" label=\"考试名称\" width=\"180\">\r\n              </el-table-column>\r\n              <el-table-column prop=\"date\" label=\"时间\" width=\"180\">\r\n              </el-table-column>\r\n              <el-table-column prop=\"description\" label=\"描述\">\r\n              </el-table-column>\r\n              <el-table-column label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-link icon=\"el-icon-edit\" @click=\"submit(scope.row)\">提交该考试成绩</el-link>\r\n                </template>\r\n\r\n              </el-table-column>\r\n            </el-table>\r\n\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n    </el-row>\r\n\r\n    <el-drawer title=\"成绩提交\" :visible.sync=\"drawer\" :direction=\"direction\" :before-close=\"handleClose\"\r\n      :modal-append-to-body='false'>\r\n\r\n      <Br></Br>\r\n      <el-card>\r\n        <el-divider><i class=\"el-icon-document\">考试详情</i></el-divider>\r\n\r\n        <p>考试名称：{{ this.dividerData.examName }}</p><Br></Br>\r\n        <p>截止日期：{{ this.dividerData.date }}</p><Br></Br>\r\n        <p>描述：{{ this.dividerData.description }}</p><Br></Br>\r\n\r\n\r\n      </el-card>\r\n      <Br></Br>\r\n      <el-card>\r\n        <el-divider><i class=\"el-icon-document\">提交成绩</i></el-divider>\r\n        <div class=\"demo-input-suffix\">\r\n          成绩：<br></br>\r\n          <el-input placeholder=\"请填写成绩\" prefix-icon=\"el-icon-edit\" v-model=\"input1\">\r\n          </el-input>\r\n          <br></br>\r\n          再次确认：\r\n          <br></br>\r\n          <el-input placeholder=\"请填写成绩\" prefix-icon=\"el-icon-edit\" v-model=\"input2\">\r\n          </el-input>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#12288;&#12288;&#12288;&#12288;&#12288;\r\n\r\n          <el-button size=\"medium \" type=\"primary\" plain @click=\"submitScore\">提交成绩</el-button>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#12288;&#12288;&#12288;&#12288;&#12288;\r\n          <el-button size=\"small \" @click=\"reset\">重置</el-button>\r\n\r\n        </div>\r\n      </el-card>\r\n      <el-divider></el-divider>\r\n\r\n\r\n    </el-drawer>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst ip = \"localhost:8090\";\r\nimport axios from 'axios'\r\naxios.defaults.withCredentials = true;\r\nvar BigInteger = require('jsbn').BigInteger;\r\nvar SecureRandom = require('jsbn').SecureRandom;\r\nexport default {\r\n  name: 'stu',\r\n  data() {\r\n    return {\r\n\r\n      commitData: [],\r\n      input1: \"\",\r\n      input2: \"\",\r\n      pk: '',\r\n      pkScore: \"\",\r\n      n: '',\r\n      n_square: \"\",\r\n      m: \"\",\r\n      bits: 32,\r\n      g: \"\",\r\n      r: \"\",\r\n      dividerData: {\r\n        examName: \"\",\r\n        description: '',\r\n        date: \"\",\r\n        id: '',\r\n        score: \"\",\r\n\r\n\r\n      },\r\n\r\n      drawer: false,\r\n      direction: 'rtl',\r\n      valueDate: new Date(),\r\n      userImg: require('../../src/assets/images/userImg.jpg'),\r\n      user: {\r\n        id: '',\r\n        username: '',\r\n        password: '',\r\n        name: '',\r\n        className: '',\r\n        classId: '',\r\n        school: '',\r\n        exam: '',\r\n\r\n\r\n      },\r\n      exams: {\r\n        id: '',\r\n        examName: '',\r\n        date: '',\r\n        status: '',\r\n        description: '',\r\n\r\n      },\r\n\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n    this.testlogin();\r\n\r\n  },\r\n\r\n\r\n  methods: {\r\n    encrypt() {\r\n      this.n = new BigInteger(this.pk);\r\n      this.n_square = this.n.square();\r\n      this.m = new BigInteger(this.dividerData.score);\r\n\r\n      this.g = new BigInteger('2');\r\n      this.r = new BigInteger(this.bits, new SecureRandom());\r\n      this.pkScore = this.g.modPow(this.m, this.n_square).multiply(this.r.modPow(this.n, this.n_square)).mod(this.n_square).toString();\r\n    },\r\n    reset() {\r\n      this.input1 = '';\r\n      this.input2 = '';\r\n    },\r\n    submitScore() {\r\n      if (this.input1 === this.input2) {\r\n        this.dividerData.score = this.input1;\r\n\r\n        this.encrypt();\r\n\r\n        this.commitData[0] = this.user.id;\r\n        this.commitData[1] = this.dividerData.id;\r\n        this.commitData[2] = this.pkScore;\r\n        this.commitData[3] = this.pk;\r\n\r\n\r\n\r\n        axios.post(\"http://\" + ip + \"/commit\", this.commitData).then(res => {\r\n          if (res.data.code == 20010) {\r\n\r\n            this.$message.error(res.data.msg)\r\n            if (res.data.msg == \"您已经提交过了\") {\r\n\r\n            }\r\n          } else if (res.data.code == 20011) {\r\n            this.$message.success(res.data.msg)\r\n\r\n          }\r\n        })\r\n        this.reset();\r\n\r\n\r\n\r\n      } else {\r\n        this.$message.error(\"请确保两次填写相同！！！\")\r\n      }\r\n    },\r\n    handleClose(done) {\r\n      this.$confirm('确认关闭？')\r\n        .then(_ => {\r\n\r\n          done();\r\n\r\n        })\r\n        .catch(_ => { });\r\n    },\r\n    mima() {\r\n      window.alert(\"修改密码\")\r\n    },\r\n    submit(val) {\r\n\r\n      this.drawer = true;\r\n      this.dividerData.examName = val.examName;\r\n      this.dividerData.date = val.date;\r\n      this.dividerData.description = val.description;\r\n      this.dividerData.id = val.id;\r\n    },\r\n\r\n    sleep(n) {\r\n      var start = new Date().getTime();\r\n      while (true) {\r\n        if (new Date().getTime() - start > n) {\r\n          break;\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    //登录请求\r\n    testlogin() {\r\n      axios.get(\"http://\" + ip + \"/login\").then(res => {\r\n\r\n        if (res.data.code == 20001) {\r\n\r\n          this.user = res.data.data[0];\r\n\r\n          this.exams = res.data.data[1];\r\n          this.pk = res.data.data[2];\r\n\r\n\r\n\r\n        } else if (res.data.code == 20000) {\r\n\r\n          this.$message.error(\"请先登录!!!\");\r\n\r\n          this.sleep(1000);\r\n\r\n\r\n          location.href = \"http://101.42.232.181:8088/login\"\r\n        }\r\n\r\n      })\r\n    }\r\n\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.el-row {\r\n  margin-bottom: 20px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.el-col {\r\n  border-radius: 4px;\r\n}\r\n\r\n.bg-purple-dark {\r\n  background: #bdc4cd;\r\n}\r\n\r\n.bg-purple {\r\n  background: #d3dce6;\r\n}\r\n\r\n.bg-purple-light {\r\n  background: #cbd0dd;\r\n}\r\n\r\n.grid-content {\r\n  border-radius: 4px;\r\n  min-height: 36px;\r\n}\r\n\r\n.row-bg {\r\n  padding: 10px 0;\r\n  background-color: #f9fafc;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}